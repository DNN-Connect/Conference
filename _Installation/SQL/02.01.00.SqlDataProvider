SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Conference_ApiKeys') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}Connect_Conference_ApiKeys(
 [ApiKey] [varchar](50) NOT NULL,
 [Expires] [datetime] NULL,
 [CreatedByUserID] [int] NOT NULL,
 [CreatedOnDate] [datetime] NOT NULL,
 CONSTRAINT PK_{objectQualifier}Connect_Conference_ApiKeys PRIMARY KEY CLUSTERED 
(
 [ApiKey] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Conference_ApiKeys_Users') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Conference_ApiKeys'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Conference_ApiKeys  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_Conference_ApiKeys_Users FOREIGN KEY([CreatedByUserID])
REFERENCES {databaseOwner}{objectQualifier}Users ([UserID])
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Conference_ApiKeys_Users') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Conference_ApiKeys'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Conference_ApiKeys CHECK CONSTRAINT FK_{objectQualifier}Connect_Conference_ApiKeys_Users
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_Conference_ApiKeys'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_Conference_ApiKeys
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_Conference_ApiKeys
AS
SELECT
 k.*,
 u.DisplayName CreatedByUser,
 u.Username CreatedByUserName
FROM {databaseOwner}{objectQualifier}Connect_Conference_ApiKeys k
 INNER JOIN {databaseOwner}{objectQualifier}Users u ON u.UserID=k.CreatedByUserID
GO

