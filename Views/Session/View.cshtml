@inherits ConferenceWebPage<Session>
@using Connect.DNN.Modules.Conference.Common;
@using Connect.Conference.Core.Common;
@using Connect.Conference.Core.Models.Sessions;
@using Connect.Conference.Core.Repositories;
@using DotNetNuke.Web.Mvc.Helpers;
@{
    ConferenceModuleContext.AddBootstrapCss();
    ConferenceModuleContext.AddEditScripts();
    ConferenceModuleContext.AddScript("SimpleAjaxUploader.min.js", "SimpleAjaxUploader", "2.2.4");
    var commentsPageSize = 5;
    var colWidth = 12;
    var isPresenter = ConferenceModuleContext.Security.IsPresenter(Model.SessionId);
    var speakers = Model.GetSpeakers();
}

<div class="connectConference" data-moduleid="@Dnn.ModuleContext.ModuleId"
     data-resources="@SerializedResources()"
     data-security="@(Newtonsoft.Json.JsonConvert.SerializeObject(ConferenceModuleContext.Security))">
</div>

<div class="container">
 <div class="row">
  <div class="col-xs-12">
   <div class="panel panel-info sessionDisplay">
    <div class="panel-heading">
     <h2 class="panel-title">@Model.Title</h2>
     @if (!string.IsNullOrEmpty(Model.SubTitle))
     {
     <p><em>@Model.SubTitle</em></p>
     }
    </div>
    <div class="panel-body">
     <div class="row">
      <div class="col-xs-6 col-sm-2 speakerCol">
       @foreach (var speaker in speakers)
       {
       <div class="speaker">
        <img src="@DotNetNuke.Common.Globals.ApplicationPath/DnnImageHandler.ashx?mode=profilepic&w=64&h=64&userId=@speaker.SpeakerId" class="img-circle img-responsive" />
        @speaker.DisplayName
       </div>
       }

      </div>
      <div class="col-xs-6 col-sm-10">
       <dl class="dl-horizontal">
        <dt>@Dnn.LocalizeString("Status")</dt>
        @if (isPresenter | ConferenceModuleContext.Security.CanManage)
        {
        <dd>
         <span class="sessionStatusButton"
          data-conferenceid="@Model.ConferenceId"
          data-sessionid="@Model.SessionId"
          data-moduleid="@Dnn.ModuleContext.ModuleId"
          data-options="@(Newtonsoft.Json.JsonConvert.SerializeObject(Connect.DNN.Modules.Conference.Common.Globals.SessionStatusOptions(ConferenceModuleContext.Security.CanManage)))"
          data-selected="@Model.Status"></span>
        </dd>
        }
        else
        {
        <dd>@(((Connect.Conference.Core.Common.SessionStatus)Model.Status).ToStatusString())</dd>
        }
        @if (!string.IsNullOrEmpty(Model.Level))
        {
        <dt>@Dnn.LocalizeString("Level")</dt>
        <dd>@Model.Level</dd>
        }
        @if (Model.Capacity != null)
        {
        <dt>@Dnn.LocalizeString("Capacity")</dt>
        <dd>@Model.Capacity</dd>
        }
        @if (Model.SlotId != 0)
        {
        <dt>@Dnn.LocalizeString("DateAndTime")</dt>
        <dd>@(((DateTime)Model.SessionDateAndTime).ToString("g"))</dd>
        }
        @if (Model.LocationId != null)
        {
        <dt>@Dnn.LocalizeString("Location")</dt>
        <dd>@Model.LocationName</dd>
        }
       </dl>
       <hr />
       @if (!string.IsNullOrEmpty(Model.Description))
       {
       <div>@Html.Raw(Model.Description.SafeReplace(Environment.NewLine, "<br />"))</div>
       <hr />
       }
       <h4>@Dnn.LocalizeString("AboutTheSpeakers")</h4>
       <dl>
        @foreach (var speaker in speakers)
        {
        <dt>@speaker.DisplayName</dt>
        <dd class="speaker">@Html.Raw(speaker.Description.SafeReplace(Environment.NewLine, "<br />"))</dd>
        }
       </dl>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
 @if (isPresenter)
 {
 <div class="row">
  <div class="col-xs-12">
   @if (!string.IsNullOrEmpty(Model.Notes))
   {
   <div class="well">@Model.Notes</div>
   }
   <div class="buttons-right">
    @if (Model.Status > 0)
    {
    <button type="submit" class="btn btn-warning" id="cmdRetract" name="workflow" value="0">@Dnn.LocalizeString("Retract")</button>
    }
    @if (Model.Status == 0)
    {
    <button type="submit" class="btn btn-primary" id="cmdSubmit" name="workflow" value="1">@Dnn.LocalizeString("Submit")</button>
    <button type="submit" class="btn btn-warning" id="cmdDelete" name="command" value="delete">@Dnn.LocalizeString("Delete")</button>
    }
    @Html.ActionLink(Dnn.LocalizeString("Edit"), "Submit", "Session", new { ConferenceId = Model.ConferenceId, SessionId = Model.SessionId, ret = "s-v" }, new { @class = "btn btn-default" })
   </div>
  </div>
 </div>
 }
 <div class="row">
  <div class="col-xs-12">
   <div class="resourcesComponent" data-moduleid="@Dnn.ModuleContext.ModuleId" data-tabid="@Dnn.ModuleContext.TabId"
        data-conferenceid="@Model.ConferenceId" data-sessionid="@Model.SessionId"
        data-resourcedir="@(Dnn.PortalSettings.HomeDirectory)@(Model.GetResourcesPath("/"))"
        data-resources="@(Newtonsoft.Json.JsonConvert.SerializeObject(SessionResourceRepository.Instance.GetSessionResourcesBySession(Model.SessionId).Where(r => r.Visibility == 1 | isPresenter | ConferenceModuleContext.Security.CanManage)))"
        data-canadd="@((isPresenter | ConferenceModuleContext.Security.CanManage).ToString().ToLower())">
   </div>
  </div>
 </div>
 <div class="row">
  @if (isPresenter & Model.NrSpeakers > 1)
  {
   colWidth = 4;
   var commentList = Connect.Conference.Core.Repositories.CommentRepository.Instance.GetCommentsBySession(Model.SessionId, 0, 0, commentsPageSize);
   var totalComments = commentList.TotalCount;
   <div class="commentsComponent col-xs-12 col-sm-@colWidth" data-moduleid="@Dnn.ModuleContext.ModuleId"
        data-loggedin="@((Dnn.User.UserID > 0).ToString().ToLower())" data-title="@Dnn.LocalizeString("PrivateComments")" data-help="@Dnn.LocalizeString("PrivateComments.Help")"
        data-conference="@Model.ConferenceId" data-session="@Model.SessionId" data-visibility="0" data-pagesize="@commentsPageSize" data-totalcomments="@totalComments"
        data-comments="@(Newtonsoft.Json.JsonConvert.SerializeObject(commentList))"
        data-apppath="@DotNetNuke.Common.Globals.ApplicationPath">
   </div>
  }
  @if (ConferenceModuleContext.Security.CanManage | isPresenter)
  {
   if (colWidth == 12) { colWidth = 6; }
   var commentList = Connect.Conference.Core.Repositories.CommentRepository.Instance.GetCommentsBySession(Model.SessionId, 1, 0, commentsPageSize);
   var totalComments = commentList.TotalCount;
   <div class="commentsComponent col-xs-12 col-sm-@colWidth" data-moduleid="@Dnn.ModuleContext.ModuleId"
        data-loggedin="@((Dnn.User.UserID > 0).ToString().ToLower())" data-title="@Dnn.LocalizeString("InternalComments")" data-help="@Dnn.LocalizeString("InternalComments.Help")"
        data-conference="@Model.ConferenceId" data-session="@Model.SessionId" data-visibility="1" data-pagesize="@commentsPageSize" data-totalcomments="@totalComments"
        data-comments="@(Newtonsoft.Json.JsonConvert.SerializeObject(commentList))"
        data-apppath="@DotNetNuke.Common.Globals.ApplicationPath">
   </div>
  }
  @{
      var publicCommentList = Connect.Conference.Core.Repositories.CommentRepository.Instance.GetCommentsBySession(Model.SessionId, 2, 0, commentsPageSize);
      var publicTotalComments = publicCommentList.TotalCount;
  }
  <div class="commentsComponent col-xs-12 col-sm-@colWidth" data-moduleid="@Dnn.ModuleContext.ModuleId"
       data-loggedin="@((Dnn.User.UserID > 0).ToString().ToLower())" data-title="@Dnn.LocalizeString("PublicComments")" data-help="@Dnn.LocalizeString("PublicComments.Help")"
       data-conference="@Model.ConferenceId" data-session="@Model.SessionId" data-visibility="2" data-pagesize="@commentsPageSize"
       data-totalcomments="@publicTotalComments"
       data-comments="@(Newtonsoft.Json.JsonConvert.SerializeObject(publicCommentList))"
       data-apppath="@DotNetNuke.Common.Globals.ApplicationPath">
  </div>
 </div>
</div>

<div class="container">
 <div class="row">
  <div class="col-xs-12">
   <div class="right">
    @ReturnLink(Dnn.LocalizeString("Return"), "Home", "Index", null, new { @class = "btn btn-primary" }, Model.ConferenceId)
   </div>
  </div>
 </div>
</div>

<script type="text/javascript">
 $(function () {
  $(document).ready(function () {
   $('#cmdSubmit').click(function () {
    return confirm('@Dnn.LocalizeString("Submit.Confirm")');
   });
   $('#cmdRetract').click(function () {
    return confirm('@Dnn.LocalizeString("Retract.Confirm")');
   });
   $('#cmdDelete').click(function () {
    return confirm('@Dnn.LocalizeString("Delete.Confirm")');
   });
  });
 });
</script>