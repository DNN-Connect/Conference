var Common =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./Common.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./Common.ts":
/*!*******************!*\
  !*** ./Common.ts ***!
  \*******************/
/*! exports provided: showLoading, hideLoading, showError, isInt, validateForm, getTableOrder, minutesToTime, moveObject, pad, getPastel, sort_by, colStyle, ConferenceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"showLoading\", function() { return showLoading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hideLoading\", function() { return hideLoading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"showError\", function() { return showError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isInt\", function() { return isInt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateForm\", function() { return validateForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTableOrder\", function() { return getTableOrder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"minutesToTime\", function() { return minutesToTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"moveObject\", function() { return moveObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pad\", function() { return pad; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPastel\", function() { return getPastel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sort_by\", function() { return sort_by; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colStyle\", function() { return colStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConferenceService\", function() { return ConferenceService; });\n/* harmony import */ var _Service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Service */ \"./Service.ts\");\n // Common functions for the module\n\nfunction showLoading() {\n  if ($(\"#serviceStatus\").length) {\n    $(\"#serviceStatus div:first-child\").show();\n    $(\"#serviceStatus div:nth-child(2)\").hide();\n    $(\"#serviceStatus\").css(\"background\", \"#2FC1F3\").show();\n  }\n}\nfunction hideLoading() {\n  if ($(\"#serviceStatus\").length) {\n    $(\"#serviceStatus\").hide();\n  }\n}\nfunction showError(message) {\n  if ($(\"#serviceStatus\").length) {\n    $(\"#serviceStatus div:first-child\").hide();\n    $(\"#serviceStatus div:nth-child(2)\").html(message).show();\n    $(\"#serviceStatus\").css(\"background\", \"#F33B2F\").show();\n    setTimeout(function () {\n      $(\"#serviceStatus\").hide();\n    }, 3000);\n  }\n}\nfunction isInt(value) {\n  return !isNaN(value) && parseInt(Number(value).toString()) == value && !isNaN(parseInt(value, 10));\n}\nfunction validateForm(form, submitButton, formErrorDiv) {\n  submitButton.click(function () {\n    var hasErrors = false;\n    formErrorDiv.empty().hide();\n    form.find('input[data-validator=\"integer\"]').each(function (i, el) {\n      if (!isInt($(el).val()) && $(el).val() != \"\") {\n        hasErrors = true;\n        $(el).parent().addClass(\"error\");\n        formErrorDiv.append(\"<span>\" + $(el).attr(\"data-message\") + \"</span><br />\").show();\n      }\n    });\n    form.find('input[data-required=\"true\"]').each(function (i, el) {\n      if ($(el).val() == \"\") {\n        hasErrors = true;\n        $(el).parent().addClass(\"error\");\n        formErrorDiv.append(\"<span>\" + $(el).attr(\"data-message\") + \"</span><br />\").show();\n      }\n    });\n    return !hasErrors;\n  });\n}\nfunction getTableOrder(tableId) {\n  var res = [];\n  $(\"#\" + tableId + \" tbody:first tr\").each(function (i, el) {\n    res.push({\n      id: $(el).data(\"id\"),\n      order: i\n    });\n  });\n  return res;\n}\nfunction minutesToTime(mins) {\n  var hr = Math.floor(mins / 60);\n  var mn = mins - 60 * hr;\n  var res = mn.toString();\n\n  if (res.length == 1) {\n    res = \"0\" + res;\n  }\n\n  res = hr.toString() + \":\" + res;\n  return res;\n}\nfunction moveObject(object, dx, dy) {\n  var x = (parseFloat(object.getAttribute(\"data-x\") || \"0\") || 0) + dx,\n      y = (parseFloat(object.getAttribute(\"data-y\") || \"0\") || 0) + dy;\n  object.style.webkitTransform = object.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n  object.setAttribute(\"data-x\", x.toString());\n  object.setAttribute(\"data-y\", y.toString());\n}\n\nif (!String.prototype.startsWith) {\n  String.prototype.startsWith = function (searchString, position) {\n    position = position || 0;\n    return this.indexOf(searchString, position) === position;\n  };\n}\n\nfunction pad(number) {\n  if (number < 10) {\n    return \"0\" + number;\n  }\n\n  return number.toString();\n}\nfunction getPastel() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  red = Math.floor((red + 255) / 2);\n  green = Math.floor((green + 255) / 2);\n  blue = Math.floor((blue + 255) / 2);\n  red = Math.floor((red + 255) / 2);\n  green = Math.floor((green + 255) / 2);\n  blue = Math.floor((blue + 255) / 2);\n  var res = (\"00\" + red.toString(16)).substr(-2);\n  res += (\"00\" + green.toString(16)).substr(-2);\n  res += (\"00\" + blue.toString(16)).substr(-2);\n  return res;\n}\nfunction sort_by(field, reverse, primer) {\n  var key = primer ? function (x) {\n    return primer(x[field]);\n  } : function (x) {\n    return x[field];\n  };\n  var reverseInt = !reverse ? 1 : -1;\n  return function (a, b) {\n    return a = key(a), b = key(b), reverseInt * ((a > b ? 1 : 0) - (b > a ? 1 : 0));\n  };\n}\n;\nfunction colStyle(width, right) {\n  if (right) {\n    return {\n      width: width.toString() + \"px\",\n      textAlign: \"right\"\n    };\n  } else {\n    return {\n      width: width.toString() + \"px\"\n    };\n  }\n}\n;\n\nif (!Date.prototype.toUTCDateTimeDigits) {\n  (function () {\n    Date.prototype.toUTCDateTimeDigits = function () {\n      return this.getUTCFullYear() + \"-\" + pad(this.getUTCMonth() + 1) + \"-\" + pad(this.getUTCDate()) + \"T\" + pad(this.getUTCHours()) + \":\" + pad(this.getUTCMinutes()) + \":\" + pad(this.getUTCSeconds()) + \"Z\";\n    };\n  })();\n}\n\nfunction ConferenceService(mid) {\n  return new _Service__WEBPACK_IMPORTED_MODULE_0__[\"default\"](mid);\n}\n;\n\nDate.prototype.addDays = function (days) {\n  var dat = new Date(this.valueOf());\n  dat.setDate(dat.getDate() + days);\n  return dat;\n};\n\n$(document).ready(function () {\n  var el = $(\".ModConnectConferenceC .container\");\n\n  if (el != undefined) {\n    if (el.parent().closest(\".container\").length == 1) {\n      el.removeClass(\"container\");\n    }\n  }\n});\n\n//# sourceURL=webpack://Common/./Common.ts?");

/***/ }),

/***/ "./Service.ts":
/*!********************!*\
  !*** ./Service.ts ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DataService; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DataService =\n/*#__PURE__*/\nfunction () {\n  function DataService(mid) {\n    _classCallCheck(this, DataService);\n\n    this.moduleId = -1;\n    this.dnn = $;\n    this.baseServicepath = this.dnn.dnnSF(this.moduleId).getServiceRoot('Connect/Conference');\n    this.tabId = this.dnn.dnnSF(this.moduleId).getTabId();\n    this.moduleId = mid;\n  }\n\n  _createClass(DataService, [{\n    key: \"ajaxCall\",\n    value: function ajaxCall(type, controller, action, conferenceId, id, data, success, fail, isUploadForm) {\n      var path = this.baseServicepath;\n\n      if (conferenceId != null) {\n        path += 'Conference/' + conferenceId + '/';\n      }\n\n      path = path + controller + '/' + action;\n\n      if (id != null) {\n        path += '/' + id;\n      }\n\n      var opts = {\n        type: type,\n        url: path,\n        beforeSend: this.dnn.dnnSF(this.moduleId).setModuleHeaders,\n        data: data\n      };\n\n      if (isUploadForm) {\n        opts.contentType = false;\n        opts.processData = false;\n      }\n\n      $.ajax(opts).done(function (retdata) {\n        if (success != undefined) {\n          success(retdata);\n        }\n      }).fail(function (xhr, status) {\n        if (fail != undefined) {\n          fail(xhr.responseText);\n        }\n      });\n    }\n  }, {\n    key: \"addAttendee\",\n    value: function addAttendee(conferenceId, email, firstName, lastName, displayName, company, success, fail) {\n      this.ajaxCall('POST', 'Attendees', 'Add', conferenceId, null, {\n        Email: email,\n        FirstName: firstName,\n        LastName: lastName,\n        DisplayName: displayName,\n        Company: company\n      }, success, fail);\n    }\n  }, {\n    key: \"addComment\",\n    value: function addComment(conferenceId, sessionId, visibility, comment, success, fail) {\n      this.ajaxCall('POST', 'Comments', 'Add', conferenceId, null, {\n        SessionId: sessionId,\n        Visibility: visibility,\n        Remarks: comment\n      }, success, fail);\n    }\n  }, {\n    key: \"addOrderAudit\",\n    value: function addOrderAudit(itemId, message, success, fail) {\n      this.ajaxCall('POST', 'NBright', 'AddAudit', null, itemId, {\n        Message: message\n      }, success, fail);\n    }\n  }, {\n    key: \"addSessionSpeaker\",\n    value: function addSessionSpeaker(conferenceId, sessionId, userId, success, fail) {\n      this.ajaxCall('POST', 'SessionSpeakers', 'Add', conferenceId, sessionId, {\n        UserId: userId\n      }, success, fail);\n    }\n  }, {\n    key: \"addSpeaker\",\n    value: function addSpeaker(conferenceId, email, firstName, lastName, displayName, company, success, fail) {\n      this.ajaxCall('POST', 'Speakers', 'Add', conferenceId, null, {\n        Email: email,\n        FirstName: firstName,\n        LastName: lastName,\n        DisplayName: displayName,\n        Company: company\n      }, success, fail);\n    }\n  }, {\n    key: \"addTag\",\n    value: function addTag(conferenceId, tagName, success, fail) {\n      this.ajaxCall('POST', 'Tags', 'Add', conferenceId, null, {\n        tagName: tagName\n      }, success, fail);\n    }\n  }, {\n    key: \"addUrl\",\n    value: function addUrl(conferenceId, sessionId, url, success, fail) {\n      this.ajaxCall('POST', 'SessionResources', 'Add', conferenceId, sessionId, {\n        url: url\n      }, success, fail);\n    }\n  }, {\n    key: \"attendSession\",\n    value: function attendSession(conferenceId, sessionId, codes, success, fail) {\n      this.ajaxCall('POST', 'SessionAttendees', 'AttendByCode', conferenceId, null, {\n        SessionId: sessionId,\n        Codes: codes\n      }, success, fail);\n    }\n  }, {\n    key: \"approveResource\",\n    value: function approveResource(conferenceId, sessionId, sessionResource, success, fail) {\n      this.ajaxCall('POST', 'SessionResources', 'Approve', conferenceId, sessionId, {\n        SessionResource: sessionResource\n      }, success, fail);\n    }\n  }, {\n    key: \"changeAttendeeStatus\",\n    value: function changeAttendeeStatus(conferenceId, userId, newStatus, success, fail) {\n      this.ajaxCall('POST', 'Attendees', 'ChangeStatus', conferenceId, null, {\n        UserId: userId,\n        Status: newStatus\n      }, success, fail);\n    }\n  }, {\n    key: \"changeSessionStatus\",\n    value: function changeSessionStatus(conferenceId, sessionId, newStatus, success, fail) {\n      this.ajaxCall('POST', 'Sessions', 'ChangeStatus', conferenceId, sessionId, {\n        newStatus: newStatus\n      }, success, fail);\n    }\n  }, {\n    key: \"changeSessionTrack\",\n    value: function changeSessionTrack(conferenceId, sessionId, newTrack, success, fail) {\n      this.ajaxCall('POST', 'Sessions', 'ChangeTrack', conferenceId, sessionId, {\n        newTrack: newTrack\n      }, success, fail);\n    }\n  }, {\n    key: \"checkNewComments\",\n    value: function checkNewComments(conferenceId, sessionId, visibility, lastCheck, success, fail) {\n      this.ajaxCall('GET', 'Comments', 'Poll', conferenceId, null, {\n        SessionId: sessionId,\n        Visibility: visibility,\n        LastCheck: lastCheck.toUTCDateTimeDigits()\n      }, success, fail);\n    }\n  }, {\n    key: \"deleteComment\",\n    value: function deleteComment(conferenceId, commentId, success, fail) {\n      this.ajaxCall('POST', 'Comments', 'Delete', conferenceId, commentId, null, success, fail);\n    }\n  }, {\n    key: \"deleteLocation\",\n    value: function deleteLocation(conferenceId, locationId, success, fail) {\n      this.ajaxCall('POST', 'Locations', 'Delete', conferenceId, locationId, null, success, fail);\n    }\n  }, {\n    key: \"deleteResource\",\n    value: function deleteResource(conferenceId, sessionId, sessionResource, success, fail) {\n      this.ajaxCall('POST', 'SessionResources', 'Delete', conferenceId, sessionId, {\n        SessionResource: sessionResource\n      }, success, fail);\n    }\n  }, {\n    key: \"deleteSession\",\n    value: function deleteSession(conferenceId, sessionId, success, fail) {\n      this.ajaxCall('POST', 'Sessions', 'Delete', conferenceId, sessionId, null, success, fail);\n    }\n  }, {\n    key: \"deleteSessionSpeaker\",\n    value: function deleteSessionSpeaker(conferenceId, sessionId, userId, success, fail) {\n      this.ajaxCall('POST', 'SessionSpeakers', 'Delete', conferenceId, sessionId, {\n        UserId: userId\n      }, success, fail);\n    }\n  }, {\n    key: \"deleteSlot\",\n    value: function deleteSlot(conferenceId, slotId, success, fail) {\n      this.ajaxCall('POST', 'Slots', 'Delete', conferenceId, slotId, null, success, fail);\n    }\n  }, {\n    key: \"deleteTag\",\n    value: function deleteTag(conferenceId, tagId, success, fail) {\n      this.ajaxCall('POST', 'Tags', 'Delete', conferenceId, tagId, null, success, fail);\n    }\n  }, {\n    key: \"deleteTrack\",\n    value: function deleteTrack(conferenceId, trackId, success, fail) {\n      this.ajaxCall('POST', 'Tracks', 'Delete', conferenceId, trackId, null, success, fail);\n    }\n  }, {\n    key: \"editAttendee\",\n    value: function editAttendee(conferenceId, attendee, success, fail) {\n      this.ajaxCall('POST', 'Attendees', 'Edit', conferenceId, attendee.UserId, {\n        Company: attendee.Company,\n        AttCode: attendee.AttCode,\n        ReceiveNotifications: attendee.ReceiveNotifications\n      }, success, fail);\n    }\n  }, {\n    key: \"editResource\",\n    value: function editResource(conferenceId, sessionId, sessionResource, success, fail) {\n      this.ajaxCall('POST', 'SessionResources', 'Edit', conferenceId, sessionId, {\n        SessionResource: sessionResource\n      }, success, fail);\n    }\n  }, {\n    key: \"editTag\",\n    value: function editTag(conferenceId, tagId, tagName, success, fail) {\n      this.ajaxCall('POST', 'Tags', 'Edit', conferenceId, tagId, {\n        tagName: tagName\n      }, success, fail);\n    }\n  }, {\n    key: \"getConferenceSlots\",\n    value: function getConferenceSlots(conferenceId, success, fail) {\n      this.ajaxCall('POST', 'Slots', 'List', conferenceId, null, null, success, fail);\n    }\n  }, {\n    key: \"getLocations\",\n    value: function getLocations(conferenceId, success, fail) {\n      this.ajaxCall('GET', 'Locations', 'List', conferenceId, null, null, success, fail);\n    }\n  }, {\n    key: \"getNextSessions\",\n    value: function getNextSessions(conferenceId, success, fail) {\n      this.ajaxCall('GET', 'Sessions', 'Next', conferenceId, null, null, success, fail);\n    }\n  }, {\n    key: \"getSessionAttendees\",\n    value: function getSessionAttendees(conferenceId, sessionId, success, fail) {\n      this.ajaxCall('GET', 'SessionAttendees', 'SessionAttendees', conferenceId, sessionId, null, success, fail);\n    }\n  }, {\n    key: \"getOrderDetails\",\n    value: function getOrderDetails(conferenceId, itemId, success, fail) {\n      this.ajaxCall('GET', 'NBright', 'Details', conferenceId, itemId, null, success, fail);\n    }\n  }, {\n    key: \"getOrderAudit\",\n    value: function getOrderAudit(conferenceId, itemId, success, fail) {\n      this.ajaxCall('GET', 'NBright', 'Audit', null, itemId, null, success, fail);\n    }\n  }, {\n    key: \"loadComments\",\n    value: function loadComments(conferenceId, sessionId, visibility, pageIndex, pageSize, success, fail) {\n      this.ajaxCall('GET', 'Comments', 'List', conferenceId, null, {\n        SessionId: sessionId,\n        Visibility: visibility,\n        PageIndex: pageIndex,\n        PageSize: pageSize\n      }, success, fail);\n    }\n  }, {\n    key: \"orderLocations\",\n    value: function orderLocations(conferenceId, newOrder, success, fail) {\n      this.ajaxCall('POST', 'Locations', 'Reorder', conferenceId, null, JSON.stringify(newOrder), success, fail);\n    }\n  }, {\n    key: \"orderSessions\",\n    value: function orderSessions(conferenceId, newOrder, success, fail) {\n      this.ajaxCall('POST', 'Sessions', 'Reorder', conferenceId, null, JSON.stringify(newOrder), success, fail);\n    }\n  }, {\n    key: \"orderSessionSpeakers\",\n    value: function orderSessionSpeakers(conferenceId, sessionId, newOrder, success, fail) {\n      this.ajaxCall('POST', 'SessionSpeakers', 'Reorder', conferenceId, sessionId, JSON.stringify(newOrder), success, fail);\n    }\n  }, {\n    key: \"orderSpeakers\",\n    value: function orderSpeakers(conferenceId, newOrder, success, fail) {\n      this.ajaxCall('POST', 'Speakers', 'Reorder', conferenceId, null, JSON.stringify(newOrder), success, fail);\n    }\n  }, {\n    key: \"orderSponsors\",\n    value: function orderSponsors(conferenceId, newOrder, success, fail) {\n      this.ajaxCall('POST', 'Sponsors', 'Reorder', conferenceId, null, JSON.stringify(newOrder), success, fail);\n    }\n  }, {\n    key: \"orderTracks\",\n    value: function orderTracks(conferenceId, newOrder, success, fail) {\n      this.ajaxCall('POST', 'Tracks', 'Reorder', conferenceId, null, JSON.stringify(newOrder), success, fail);\n    }\n  }, {\n    key: \"searchUsers\",\n    value: function searchUsers(conferenceId, search, success, fail) {\n      this.ajaxCall('GET', 'Speakers', 'SearchUsers', conferenceId, null, {\n        search: search\n      }, success, fail);\n    }\n  }, {\n    key: \"searchUsersByEmail\",\n    value: function searchUsersByEmail(conferenceId, searchTerm, success, fail) {\n      this.ajaxCall('GET', 'Module', 'SearchUsers', conferenceId, null, {\n        field: 'email',\n        search: searchTerm\n      }, success, fail);\n    }\n  }, {\n    key: \"searchTags\",\n    value: function searchTags(conferenceId, searchTerm, success, fail) {\n      this.ajaxCall('GET', 'Tags', 'Search', conferenceId, null, {\n        search: searchTerm\n      }, success, fail);\n    }\n  }, {\n    key: \"searchTracks\",\n    value: function searchTracks(conferenceId, searchTerm, success, fail) {\n      this.ajaxCall('GET', 'Tracks', 'Search', conferenceId, null, {\n        search: searchTerm\n      }, success, fail);\n    }\n  }, {\n    key: \"sessionVote\",\n    value: function sessionVote(conferenceId, sessionId, vote, success, fail) {\n      this.ajaxCall('POST', 'Sessions', 'Vote', conferenceId, sessionId, {\n        vote: vote\n      }, success, fail);\n    }\n  }, {\n    key: \"tagVote\",\n    value: function tagVote(conferenceId, tagId, vote, success, fail) {\n      this.ajaxCall('POST', 'Tags', 'Vote', conferenceId, tagId, {\n        vote: vote\n      }, success, fail);\n    }\n  }, {\n    key: \"toggleParticipant\",\n    value: function toggleParticipant(conferenceId, itemId, participant, success, fail) {\n      this.ajaxCall('POST', 'NBright', 'Participant', conferenceId, itemId, participant, success, fail);\n    }\n  }, {\n    key: \"tryMoveSession\",\n    value: function tryMoveSession(conferenceId, sessionId, day, slotId, locationId, displaceOthers, success, fail) {\n      this.ajaxCall('POST', 'Sessions', 'Move', conferenceId, sessionId, {\n        Day: day,\n        SlotId: slotId,\n        LocationId: locationId,\n        DisplaceOthers: displaceOthers\n      }, success, fail);\n    }\n  }, {\n    key: \"tryRemoveSession\",\n    value: function tryRemoveSession(conferenceId, sessionId, success, fail) {\n      this.ajaxCall('POST', 'Sessions', 'Remove', conferenceId, sessionId, null, success, fail);\n    }\n  }, {\n    key: \"updateAttendeeImage\",\n    value: function updateAttendeeImage(conferenceId, userId, image, success, fail) {\n      this.ajaxCall('POST', 'Attendees', 'UpdateImage', conferenceId, userId, {\n        Image: image\n      }, success, fail);\n    }\n  }, {\n    key: \"updateOrderStatus\",\n    value: function updateOrderStatus(itemId, newStatus, success, fail) {\n      this.ajaxCall('POST', 'NBright', 'OrderStatus', null, null, {\n        ItemId: itemId,\n        Status: newStatus\n      }, success, fail);\n    }\n  }, {\n    key: \"updateSlot\",\n    value: function updateSlot(conferenceId, slot, success, fail) {\n      this.ajaxCall('POST', 'Slots', 'Update', conferenceId, slot.SlotId, slot, success, fail);\n    }\n  }, {\n    key: \"updateSpeakerImage\",\n    value: function updateSpeakerImage(conferenceId, userId, image, success, fail) {\n      this.ajaxCall('POST', 'Speakers', 'UpdateImage', conferenceId, userId, {\n        Image: image\n      }, success, fail);\n    }\n  }]);\n\n  return DataService;\n}();\n\n\n\n//# sourceURL=webpack://Common/./Service.ts?");

/***/ })

/******/ });