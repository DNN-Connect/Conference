/* Fix to FK attendees to conferences to ensure we can delete a conference */
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Conference_Attendees_Conferences') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Conference_Attendees'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Conference_Attendees DROP CONSTRAINT FK_{objectQualifier}Connect_Conference_Attendees_Conferences
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Conference_Attendees_Conferences') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Conference_Attendees'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Conference_Attendees  WITH CHECK ADD  CONSTRAINT FK_{objectQualifier}Connect_Conference_Attendees_Conferences FOREIGN KEY([ConferenceId])
REFERENCES {databaseOwner}{objectQualifier}Connect_Conference_Conferences ([ConferenceId])
ON DELETE CASCADE
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}FK_{objectQualifier}Connect_Conference_Attendees_Conferences') AND parent_object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_Conference_Attendees'))
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Conference_Attendees CHECK CONSTRAINT FK_{objectQualifier}Connect_Conference_Attendees_Conferences
GO

/* Add time zone to conference */
ALTER TABLE {databaseOwner}{objectQualifier}Connect_Conference_Conferences ADD
TimeZoneId VARCHAR(50)
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_Conference_Conferences'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_Conference_Conferences
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_Conference_Conferences
AS
SELECT
 c.*,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_Attendees a WHERE a.ConferenceId=c.ConferenceId) NrAttendees,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_Speakers s WHERE s.ConferenceId=c.ConferenceId) NrSpeakers,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_Locations l WHERE l.ConferenceId=c.ConferenceId) NrLocations,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_Tracks t WHERE t.ConferenceId=c.ConferenceId) NrTracks,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_Sessions s WHERE s.ConferenceId=c.ConferenceId AND s.[Status] >= 3) NrSessions,
 uc.DisplayName CreatedByUser,
 um.DisplayName LastModifiedByUser
FROM {databaseOwner}{objectQualifier}Connect_Conference_Conferences c
 LEFT JOIN {databaseOwner}{objectQualifier}Users uc ON uc.UserID=c.CreatedByUserID
 LEFT JOIN {databaseOwner}{objectQualifier}Users um ON um.UserID=c.LastModifiedByUserID
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}vw_Connect_Conference_Sessions'))
DROP VIEW {databaseOwner}{objectQualifier}vw_Connect_Conference_Sessions
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_Conference_Sessions
AS
SELECT
 s.*,
 c.TimeZoneId,
 DATEADD(DAY, s.DayNr, c.StartDate) + CAST(sl.Start AS DATETIME) SessionDateAndTime,
 DATEADD(MINUTE, sl.DurationMins, DATEADD(DAY, s.DayNr, c.StartDate) + CAST(sl.Start AS DATETIME)) SessionEnd,
 l.Name LocationName,
 sl.Title SlotTitle,
 t.Title TrackTitle,
 t.BackgroundColor,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_SessionAttendees a WHERE a.SessionId=s.SessionId) NrAttendees,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_SessionSpeakers ss WHERE ss.SessionId=s.SessionId) NrSpeakers,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_SessionVotes sv WHERE sv.SessionId=s.SessionId) NrVotes,
 (SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Connect_Conference_SessionResources sr WHERE sr.SessionId=s.SessionId AND sr.Visibility=1) NrResources,
 uc.DisplayName CreatedByUser,
 um.DisplayName LastModifiedByUser
FROM {databaseOwner}{objectQualifier}Connect_Conference_Sessions s
 INNER JOIN {databaseOwner}{objectQualifier}Connect_Conference_Conferences c ON c.ConferenceId=s.ConferenceId
 LEFT JOIN {databaseOwner}{objectQualifier}Connect_Conference_Locations l ON l.LocationId=s.LocationId
 LEFT JOIN {databaseOwner}{objectQualifier}Connect_Conference_Slots sl ON sl.SlotId=s.SlotId
 LEFT JOIN {databaseOwner}{objectQualifier}Connect_Conference_Tracks t ON t.TrackId=s.TrackId
 LEFT JOIN {databaseOwner}{objectQualifier}Users uc ON uc.UserID=s.CreatedByUserID
 LEFT JOIN {databaseOwner}{objectQualifier}Users um ON um.UserID=s.LastModifiedByUserID
GO

